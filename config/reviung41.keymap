/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
                // -------------------------------------------------------------------------------------------
                // |    TAB    |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |   BKSP    |
                // | ESC(CTRL) |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |    '      |
                // | SHFT('(') |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  | SHFT(')') |
                //                               | GUI | LWR | SPC | RSE | ALT |
            bindings = <
                &kp TAB        &kp Q &kp W &kp E &kp R    &kp T                   &kp Y     &kp U    &kp I     &kp O   &kp P    &kp BSPC
                &mt LCTRL ESC  &kp A &kp S &kp D &kp F    &kp G                   &kp H     &kp J    &kp K     &kp L   &kp SEMI &kp SQT
                &mt LSHFT LPAR &kp Z &kp X &kp C &kp V    &kp B                   &kp N     &kp M    &kp COMMA &kp DOT &kp FSLH &mt RSHFT RPAR
                                                 &kp LGUI &lt LOWER RET &kp SPACE &mo RAISE &kp RALT
            >;
        };

        lower_layer {
                // ------------------------------------------------------------------------------
                // |    |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  |     |
                // |    | XXX | XXX | XXX | XXX | XXX |     | LFT | DWN |  UP | RGT | XXX | XXX |
                // |    | XXX | XXX | XXX | XXX | XXX |     | XXX | XXX |     |     | XXX |     |
                //                        |     |     |     | ADJ |     |
            bindings = <
                &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5        &kp N6     &kp N7   &kp N8 &kp N9    &kp N0 &trans
                &trans &none  &none  &none  &none  &none         &kp LEFT   &kp DOWN &kp UP &kp RIGHT &none  &none
                &trans &none  &none  &none  &none  &none         &none      &none    &trans &trans    &none  &trans
                                            &trans &trans &trans &mo ADJUST &trans
            >;
        };

        raise_layer {
                // -------------------------------------------------------------------------------
                // |     |  !  |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |     |
                // |     | XXX | XXX | XXX | XXX | XXX |     |  -  |  =  |  {  |  }  | "|" |  `  |
                // |     | XXX | XXX | XXX | XXX | XXX |     |  _  |  +  |  [  |  ]  |  \  |  ~  |
                //                         |     | ADJ |     |     |     |
            bindings = <
                &trans &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT         &kp CARET &kp AMPS  &kp STAR &kp LPAR &kp RPAR  &trans
                &trans &none    &none  &none    &none    &none             &kp MINUS &kp EQUAL &kp LBRC &kp RBRC &kp PIPE &kp GRAVE
                &trans &none    &none  &none    &none    &none             &kp UNDER &kp PLUS  &kp LBKT &kp RBKT &kp BSLH &kp TILDE
                                                &trans   &mo ADJUST &trans &trans    &trans
            >;
        };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
// |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
//                                              |     |     |     |     |     |
                        bindings = <
   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none              &none        &none        &none        &none        &none        &none
   &none           &none           &none           &none           &none &none              &reset       &none        &none        &none        &none        &none
                                                             &trans      &trans       &tog 3        &trans      &trans
                        >;
                };
        };
};
